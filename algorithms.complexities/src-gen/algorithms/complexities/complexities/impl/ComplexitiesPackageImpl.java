/**
 * generated by Xtext 2.12.0
 */
package algorithms.complexities.complexities.impl;

import algorithms.complexities.complexities.Calculation;
import algorithms.complexities.complexities.ComplexitiesFactory;
import algorithms.complexities.complexities.ComplexitiesPackage;
import algorithms.complexities.complexities.ExecutionTimes;
import algorithms.complexities.complexities.Model;
import algorithms.complexities.complexities.Sizes;
import algorithms.complexities.complexities.TimeUnits;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ComplexitiesPackageImpl extends EPackageImpl implements ComplexitiesPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass calculationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass executionTimesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sizesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum timeUnitsEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see algorithms.complexities.complexities.ComplexitiesPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ComplexitiesPackageImpl()
  {
    super(eNS_URI, ComplexitiesFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link ComplexitiesPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ComplexitiesPackage init()
  {
    if (isInited) return (ComplexitiesPackage)EPackage.Registry.INSTANCE.getEPackage(ComplexitiesPackage.eNS_URI);

    // Obtain or create and register package
    ComplexitiesPackageImpl theComplexitiesPackage = (ComplexitiesPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof ComplexitiesPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new ComplexitiesPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theComplexitiesPackage.createPackageContents();

    // Initialize created meta-data
    theComplexitiesPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theComplexitiesPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ComplexitiesPackage.eNS_URI, theComplexitiesPackage);
    return theComplexitiesPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Calculations()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCalculation()
  {
    return calculationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCalculation_Complexity()
  {
    return (EAttribute)calculationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCalculation_Time1()
  {
    return (EAttribute)calculationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCalculation_Time1Unit()
  {
    return (EAttribute)calculationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCalculation_Size1()
  {
    return (EAttribute)calculationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCalculation_Time2Unit()
  {
    return (EAttribute)calculationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExecutionTimes()
  {
    return executionTimesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getExecutionTimes_Size2()
  {
    return (EAttribute)executionTimesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSizes()
  {
    return sizesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSizes_Time2()
  {
    return (EAttribute)sizesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTimeUnits()
  {
    return timeUnitsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComplexitiesFactory getComplexitiesFactory()
  {
    return (ComplexitiesFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__CALCULATIONS);

    calculationEClass = createEClass(CALCULATION);
    createEAttribute(calculationEClass, CALCULATION__COMPLEXITY);
    createEAttribute(calculationEClass, CALCULATION__TIME1);
    createEAttribute(calculationEClass, CALCULATION__TIME1_UNIT);
    createEAttribute(calculationEClass, CALCULATION__SIZE1);
    createEAttribute(calculationEClass, CALCULATION__TIME2_UNIT);

    executionTimesEClass = createEClass(EXECUTION_TIMES);
    createEAttribute(executionTimesEClass, EXECUTION_TIMES__SIZE2);

    sizesEClass = createEClass(SIZES);
    createEAttribute(sizesEClass, SIZES__TIME2);

    // Create enums
    timeUnitsEEnum = createEEnum(TIME_UNITS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    executionTimesEClass.getESuperTypes().add(this.getCalculation());
    sizesEClass.getESuperTypes().add(this.getCalculation());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Calculations(), this.getCalculation(), null, "calculations", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(calculationEClass, Calculation.class, "Calculation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCalculation_Complexity(), ecorePackage.getEString(), "complexity", null, 0, 1, Calculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCalculation_Time1(), ecorePackage.getEInt(), "time1", null, 0, 1, Calculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCalculation_Time1Unit(), this.getTimeUnits(), "time1Unit", null, 0, 1, Calculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCalculation_Size1(), ecorePackage.getEInt(), "size1", null, 0, 1, Calculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCalculation_Time2Unit(), this.getTimeUnits(), "time2Unit", null, 0, 1, Calculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(executionTimesEClass, ExecutionTimes.class, "ExecutionTimes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExecutionTimes_Size2(), ecorePackage.getEInt(), "size2", null, 0, 1, ExecutionTimes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sizesEClass, Sizes.class, "Sizes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSizes_Time2(), ecorePackage.getEInt(), "time2", null, 0, 1, Sizes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(timeUnitsEEnum, TimeUnits.class, "TimeUnits");
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.SECONDS);
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.MINUTES);
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.HOURS);
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.DAYS);
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.WEEKS);
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.MONTHS);
    addEEnumLiteral(timeUnitsEEnum, TimeUnits.YEARS);

    // Create resource
    createResource(eNS_URI);
  }

} //ComplexitiesPackageImpl
