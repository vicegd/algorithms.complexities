/**
 * generated by Xtext 2.12.0
 */
package algorithms.complexities.complexities;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see algorithms.complexities.complexities.ComplexitiesFactory
 * @model kind="package"
 * @generated
 */
public interface ComplexitiesPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "complexities";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.complexities.algorithms/Complexities";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "complexities";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ComplexitiesPackage eINSTANCE = algorithms.complexities.complexities.impl.ComplexitiesPackageImpl.init();

  /**
   * The meta object id for the '{@link algorithms.complexities.complexities.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see algorithms.complexities.complexities.impl.ModelImpl
   * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Calculations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CALCULATIONS = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link algorithms.complexities.complexities.impl.CalculationImpl <em>Calculation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see algorithms.complexities.complexities.impl.CalculationImpl
   * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getCalculation()
   * @generated
   */
  int CALCULATION = 1;

  /**
   * The feature id for the '<em><b>Complexity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATION__COMPLEXITY = 0;

  /**
   * The feature id for the '<em><b>Time1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATION__TIME1 = 1;

  /**
   * The feature id for the '<em><b>Time1 Unit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATION__TIME1_UNIT = 2;

  /**
   * The feature id for the '<em><b>Size1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATION__SIZE1 = 3;

  /**
   * The feature id for the '<em><b>Time2 Unit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATION__TIME2_UNIT = 4;

  /**
   * The number of structural features of the '<em>Calculation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CALCULATION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link algorithms.complexities.complexities.impl.ExecutionTimesImpl <em>Execution Times</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see algorithms.complexities.complexities.impl.ExecutionTimesImpl
   * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getExecutionTimes()
   * @generated
   */
  int EXECUTION_TIMES = 2;

  /**
   * The feature id for the '<em><b>Complexity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES__COMPLEXITY = CALCULATION__COMPLEXITY;

  /**
   * The feature id for the '<em><b>Time1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES__TIME1 = CALCULATION__TIME1;

  /**
   * The feature id for the '<em><b>Time1 Unit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES__TIME1_UNIT = CALCULATION__TIME1_UNIT;

  /**
   * The feature id for the '<em><b>Size1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES__SIZE1 = CALCULATION__SIZE1;

  /**
   * The feature id for the '<em><b>Time2 Unit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES__TIME2_UNIT = CALCULATION__TIME2_UNIT;

  /**
   * The feature id for the '<em><b>Size2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES__SIZE2 = CALCULATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Execution Times</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXECUTION_TIMES_FEATURE_COUNT = CALCULATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link algorithms.complexities.complexities.impl.SizesImpl <em>Sizes</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see algorithms.complexities.complexities.impl.SizesImpl
   * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getSizes()
   * @generated
   */
  int SIZES = 3;

  /**
   * The feature id for the '<em><b>Complexity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES__COMPLEXITY = CALCULATION__COMPLEXITY;

  /**
   * The feature id for the '<em><b>Time1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES__TIME1 = CALCULATION__TIME1;

  /**
   * The feature id for the '<em><b>Time1 Unit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES__TIME1_UNIT = CALCULATION__TIME1_UNIT;

  /**
   * The feature id for the '<em><b>Size1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES__SIZE1 = CALCULATION__SIZE1;

  /**
   * The feature id for the '<em><b>Time2 Unit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES__TIME2_UNIT = CALCULATION__TIME2_UNIT;

  /**
   * The feature id for the '<em><b>Time2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES__TIME2 = CALCULATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Sizes</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZES_FEATURE_COUNT = CALCULATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link algorithms.complexities.complexities.TimeUnits <em>Time Units</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see algorithms.complexities.complexities.TimeUnits
   * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getTimeUnits()
   * @generated
   */
  int TIME_UNITS = 4;


  /**
   * Returns the meta object for class '{@link algorithms.complexities.complexities.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see algorithms.complexities.complexities.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link algorithms.complexities.complexities.Model#getCalculations <em>Calculations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Calculations</em>'.
   * @see algorithms.complexities.complexities.Model#getCalculations()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Calculations();

  /**
   * Returns the meta object for class '{@link algorithms.complexities.complexities.Calculation <em>Calculation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Calculation</em>'.
   * @see algorithms.complexities.complexities.Calculation
   * @generated
   */
  EClass getCalculation();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.Calculation#getComplexity <em>Complexity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Complexity</em>'.
   * @see algorithms.complexities.complexities.Calculation#getComplexity()
   * @see #getCalculation()
   * @generated
   */
  EAttribute getCalculation_Complexity();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.Calculation#getTime1 <em>Time1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Time1</em>'.
   * @see algorithms.complexities.complexities.Calculation#getTime1()
   * @see #getCalculation()
   * @generated
   */
  EAttribute getCalculation_Time1();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.Calculation#getTime1Unit <em>Time1 Unit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Time1 Unit</em>'.
   * @see algorithms.complexities.complexities.Calculation#getTime1Unit()
   * @see #getCalculation()
   * @generated
   */
  EAttribute getCalculation_Time1Unit();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.Calculation#getSize1 <em>Size1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Size1</em>'.
   * @see algorithms.complexities.complexities.Calculation#getSize1()
   * @see #getCalculation()
   * @generated
   */
  EAttribute getCalculation_Size1();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.Calculation#getTime2Unit <em>Time2 Unit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Time2 Unit</em>'.
   * @see algorithms.complexities.complexities.Calculation#getTime2Unit()
   * @see #getCalculation()
   * @generated
   */
  EAttribute getCalculation_Time2Unit();

  /**
   * Returns the meta object for class '{@link algorithms.complexities.complexities.ExecutionTimes <em>Execution Times</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Execution Times</em>'.
   * @see algorithms.complexities.complexities.ExecutionTimes
   * @generated
   */
  EClass getExecutionTimes();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.ExecutionTimes#getSize2 <em>Size2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Size2</em>'.
   * @see algorithms.complexities.complexities.ExecutionTimes#getSize2()
   * @see #getExecutionTimes()
   * @generated
   */
  EAttribute getExecutionTimes_Size2();

  /**
   * Returns the meta object for class '{@link algorithms.complexities.complexities.Sizes <em>Sizes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sizes</em>'.
   * @see algorithms.complexities.complexities.Sizes
   * @generated
   */
  EClass getSizes();

  /**
   * Returns the meta object for the attribute '{@link algorithms.complexities.complexities.Sizes#getTime2 <em>Time2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Time2</em>'.
   * @see algorithms.complexities.complexities.Sizes#getTime2()
   * @see #getSizes()
   * @generated
   */
  EAttribute getSizes_Time2();

  /**
   * Returns the meta object for enum '{@link algorithms.complexities.complexities.TimeUnits <em>Time Units</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Time Units</em>'.
   * @see algorithms.complexities.complexities.TimeUnits
   * @generated
   */
  EEnum getTimeUnits();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  ComplexitiesFactory getComplexitiesFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link algorithms.complexities.complexities.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see algorithms.complexities.complexities.impl.ModelImpl
     * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Calculations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CALCULATIONS = eINSTANCE.getModel_Calculations();

    /**
     * The meta object literal for the '{@link algorithms.complexities.complexities.impl.CalculationImpl <em>Calculation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see algorithms.complexities.complexities.impl.CalculationImpl
     * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getCalculation()
     * @generated
     */
    EClass CALCULATION = eINSTANCE.getCalculation();

    /**
     * The meta object literal for the '<em><b>Complexity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATION__COMPLEXITY = eINSTANCE.getCalculation_Complexity();

    /**
     * The meta object literal for the '<em><b>Time1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATION__TIME1 = eINSTANCE.getCalculation_Time1();

    /**
     * The meta object literal for the '<em><b>Time1 Unit</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATION__TIME1_UNIT = eINSTANCE.getCalculation_Time1Unit();

    /**
     * The meta object literal for the '<em><b>Size1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATION__SIZE1 = eINSTANCE.getCalculation_Size1();

    /**
     * The meta object literal for the '<em><b>Time2 Unit</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CALCULATION__TIME2_UNIT = eINSTANCE.getCalculation_Time2Unit();

    /**
     * The meta object literal for the '{@link algorithms.complexities.complexities.impl.ExecutionTimesImpl <em>Execution Times</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see algorithms.complexities.complexities.impl.ExecutionTimesImpl
     * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getExecutionTimes()
     * @generated
     */
    EClass EXECUTION_TIMES = eINSTANCE.getExecutionTimes();

    /**
     * The meta object literal for the '<em><b>Size2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXECUTION_TIMES__SIZE2 = eINSTANCE.getExecutionTimes_Size2();

    /**
     * The meta object literal for the '{@link algorithms.complexities.complexities.impl.SizesImpl <em>Sizes</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see algorithms.complexities.complexities.impl.SizesImpl
     * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getSizes()
     * @generated
     */
    EClass SIZES = eINSTANCE.getSizes();

    /**
     * The meta object literal for the '<em><b>Time2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIZES__TIME2 = eINSTANCE.getSizes_Time2();

    /**
     * The meta object literal for the '{@link algorithms.complexities.complexities.TimeUnits <em>Time Units</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see algorithms.complexities.complexities.TimeUnits
     * @see algorithms.complexities.complexities.impl.ComplexitiesPackageImpl#getTimeUnits()
     * @generated
     */
    EEnum TIME_UNITS = eINSTANCE.getTimeUnits();

  }

} //ComplexitiesPackage
