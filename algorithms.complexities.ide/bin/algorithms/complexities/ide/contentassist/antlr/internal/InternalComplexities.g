/*
 * generated by Xtext 2.12.0
 */
grammar InternalComplexities;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package algorithms.complexities.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package algorithms.complexities.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import algorithms.complexities.services.ComplexitiesGrammarAccess;

}
@parser::members {
	private ComplexitiesGrammarAccess grammarAccess;

	public void setGrammarAccess(ComplexitiesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalculation
entryRuleCalculation
:
{ before(grammarAccess.getCalculationRule()); }
	 ruleCalculation
{ after(grammarAccess.getCalculationRule()); } 
	 EOF 
;

// Rule Calculation
ruleCalculation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalculationAccess().getAlternatives()); }
		(rule__Calculation__Alternatives)
		{ after(grammarAccess.getCalculationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecutionTimes
entryRuleExecutionTimes
:
{ before(grammarAccess.getExecutionTimesRule()); }
	 ruleExecutionTimes
{ after(grammarAccess.getExecutionTimesRule()); } 
	 EOF 
;

// Rule ExecutionTimes
ruleExecutionTimes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getGroup()); }
		(rule__ExecutionTimes__Group__0)
		{ after(grammarAccess.getExecutionTimesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSizes
entryRuleSizes
:
{ before(grammarAccess.getSizesRule()); }
	 ruleSizes
{ after(grammarAccess.getSizesRule()); } 
	 EOF 
;

// Rule Sizes
ruleSizes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSizesAccess().getGroup()); }
		(rule__Sizes__Group__0)
		{ after(grammarAccess.getSizesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexity
entryRuleComplexity
:
{ before(grammarAccess.getComplexityRule()); }
	 ruleComplexity
{ after(grammarAccess.getComplexityRule()); } 
	 EOF 
;

// Rule Complexity
ruleComplexity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexityAccess().getGroup()); }
		(rule__Complexity__Group__0)
		{ after(grammarAccess.getComplexityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeUnits
ruleTimeUnits
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitsAccess().getAlternatives()); }
		(rule__TimeUnits__Alternatives)
		{ after(grammarAccess.getTimeUnitsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculationAccess().getExecutionTimesParserRuleCall_0()); }
		ruleExecutionTimes
		{ after(grammarAccess.getCalculationAccess().getExecutionTimesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCalculationAccess().getSizesParserRuleCall_1()); }
		ruleSizes
		{ after(grammarAccess.getCalculationAccess().getSizesParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexityAccess().getINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getComplexityAccess().getINTTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getLINEARTerminalRuleCall_2_1()); }
		RULE_LINEAR
		{ after(grammarAccess.getComplexityAccess().getLINEARTerminalRuleCall_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getEXPONENTIALTerminalRuleCall_2_2()); }
		RULE_EXPONENTIAL
		{ after(grammarAccess.getComplexityAccess().getEXPONENTIALTerminalRuleCall_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getLOGARITHMICTerminalRuleCall_2_3()); }
		RULE_LOGARITHMIC
		{ after(grammarAccess.getComplexityAccess().getLOGARITHMICTerminalRuleCall_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getLINLOGTerminalRuleCall_2_4()); }
		RULE_LINLOG
		{ after(grammarAccess.getComplexityAccess().getLINLOGTerminalRuleCall_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getLINLOGEXPTerminalRuleCall_2_5()); }
		RULE_LINLOGEXP
		{ after(grammarAccess.getComplexityAccess().getLINLOGEXPTerminalRuleCall_2_5()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getPOWERTerminalRuleCall_2_6()); }
		RULE_POWER
		{ after(grammarAccess.getComplexityAccess().getPOWERTerminalRuleCall_2_6()); }
	)
	|
	(
		{ before(grammarAccess.getComplexityAccess().getFACTORIALTerminalRuleCall_2_7()); }
		RULE_FACTORIAL
		{ after(grammarAccess.getComplexityAccess().getFACTORIALTerminalRuleCall_2_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnits__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitsAccess().getSecondsEnumLiteralDeclaration_0()); }
		('seconds')
		{ after(grammarAccess.getTimeUnitsAccess().getSecondsEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitsAccess().getMinutesEnumLiteralDeclaration_1()); }
		('minutes')
		{ after(grammarAccess.getTimeUnitsAccess().getMinutesEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitsAccess().getHoursEnumLiteralDeclaration_2()); }
		('hours')
		{ after(grammarAccess.getTimeUnitsAccess().getHoursEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitsAccess().getDaysEnumLiteralDeclaration_3()); }
		('days')
		{ after(grammarAccess.getTimeUnitsAccess().getDaysEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitsAccess().getWeeksEnumLiteralDeclaration_4()); }
		('weeks')
		{ after(grammarAccess.getTimeUnitsAccess().getWeeksEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitsAccess().getMonthsEnumLiteralDeclaration_5()); }
		('months')
		{ after(grammarAccess.getTimeUnitsAccess().getMonthsEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitsAccess().getYearsEnumLiteralDeclaration_6()); }
		('years')
		{ after(grammarAccess.getTimeUnitsAccess().getYearsEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCalculationsKeyword_0()); }
	'calculations'
	{ after(grammarAccess.getModelAccess().getCalculationsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getCalculationsAssignment_1()); }
		(rule__Model__CalculationsAssignment_1)
		{ after(grammarAccess.getModelAccess().getCalculationsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getCalculationsAssignment_1()); }
		(rule__Model__CalculationsAssignment_1)*
		{ after(grammarAccess.getModelAccess().getCalculationsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionTimes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__0__Impl
	rule__ExecutionTimes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getExecutionTimesAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__1__Impl
	rule__ExecutionTimes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getExecutionTimesAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__2__Impl
	rule__ExecutionTimes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getComplexityKeyword_2()); }
	'complexity'
	{ after(grammarAccess.getExecutionTimesAccess().getComplexityKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__3__Impl
	rule__ExecutionTimes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getComplexityAssignment_3()); }
	(rule__ExecutionTimes__ComplexityAssignment_3)
	{ after(grammarAccess.getExecutionTimesAccess().getComplexityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__4__Impl
	rule__ExecutionTimes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getIfKeyword_4()); }
	'if'
	{ after(grammarAccess.getExecutionTimesAccess().getIfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__5__Impl
	rule__ExecutionTimes__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getTimeKeyword_5()); }
	'time'
	{ after(grammarAccess.getExecutionTimesAccess().getTimeKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__6__Impl
	rule__ExecutionTimes__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getExecutionTimesAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__7__Impl
	rule__ExecutionTimes__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getTime1Assignment_7()); }
	(rule__ExecutionTimes__Time1Assignment_7)
	{ after(grammarAccess.getExecutionTimesAccess().getTime1Assignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__8__Impl
	rule__ExecutionTimes__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getTime1UnitAssignment_8()); }
	(rule__ExecutionTimes__Time1UnitAssignment_8)
	{ after(grammarAccess.getExecutionTimesAccess().getTime1UnitAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__9__Impl
	rule__ExecutionTimes__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getForKeyword_9()); }
	'for'
	{ after(grammarAccess.getExecutionTimesAccess().getForKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__10__Impl
	rule__ExecutionTimes__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getSizeKeyword_10()); }
	'size'
	{ after(grammarAccess.getExecutionTimesAccess().getSizeKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__11__Impl
	rule__ExecutionTimes__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getEqualsSignKeyword_11()); }
	'='
	{ after(grammarAccess.getExecutionTimesAccess().getEqualsSignKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__12__Impl
	rule__ExecutionTimes__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getSize1Assignment_12()); }
	(rule__ExecutionTimes__Size1Assignment_12)
	{ after(grammarAccess.getExecutionTimesAccess().getSize1Assignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__13__Impl
	rule__ExecutionTimes__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getCalculateKeyword_13()); }
	'calculate'
	{ after(grammarAccess.getExecutionTimesAccess().getCalculateKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__14__Impl
	rule__ExecutionTimes__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getTimeKeyword_14()); }
	'time'
	{ after(grammarAccess.getExecutionTimesAccess().getTimeKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__15__Impl
	rule__ExecutionTimes__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getInKeyword_15()); }
	'in'
	{ after(grammarAccess.getExecutionTimesAccess().getInKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__16__Impl
	rule__ExecutionTimes__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getTime2UnitAssignment_16()); }
	(rule__ExecutionTimes__Time2UnitAssignment_16)
	{ after(grammarAccess.getExecutionTimesAccess().getTime2UnitAssignment_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__17__Impl
	rule__ExecutionTimes__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getForKeyword_17()); }
	'for'
	{ after(grammarAccess.getExecutionTimesAccess().getForKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__18__Impl
	rule__ExecutionTimes__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getSizeKeyword_18()); }
	'size'
	{ after(grammarAccess.getExecutionTimesAccess().getSizeKeyword_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__19__Impl
	rule__ExecutionTimes__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getEqualsSignKeyword_19()); }
	'='
	{ after(grammarAccess.getExecutionTimesAccess().getEqualsSignKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExecutionTimes__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutionTimesAccess().getSize2Assignment_20()); }
	(rule__ExecutionTimes__Size2Assignment_20)
	{ after(grammarAccess.getExecutionTimesAccess().getSize2Assignment_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sizes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__0__Impl
	rule__Sizes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getSizesAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__1__Impl
	rule__Sizes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getSizesAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__2__Impl
	rule__Sizes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getComplexityKeyword_2()); }
	'complexity'
	{ after(grammarAccess.getSizesAccess().getComplexityKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__3__Impl
	rule__Sizes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getComplexityAssignment_3()); }
	(rule__Sizes__ComplexityAssignment_3)
	{ after(grammarAccess.getSizesAccess().getComplexityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__4__Impl
	rule__Sizes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getIfKeyword_4()); }
	'if'
	{ after(grammarAccess.getSizesAccess().getIfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__5__Impl
	rule__Sizes__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getSizeKeyword_5()); }
	'size'
	{ after(grammarAccess.getSizesAccess().getSizeKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__6__Impl
	rule__Sizes__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getSizesAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__7__Impl
	rule__Sizes__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getSize1Assignment_7()); }
	(rule__Sizes__Size1Assignment_7)
	{ after(grammarAccess.getSizesAccess().getSize1Assignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__8__Impl
	rule__Sizes__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getForKeyword_8()); }
	'for'
	{ after(grammarAccess.getSizesAccess().getForKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__9__Impl
	rule__Sizes__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getTimeKeyword_9()); }
	'time'
	{ after(grammarAccess.getSizesAccess().getTimeKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__10__Impl
	rule__Sizes__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getEqualsSignKeyword_10()); }
	'='
	{ after(grammarAccess.getSizesAccess().getEqualsSignKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__11__Impl
	rule__Sizes__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getTime1Assignment_11()); }
	(rule__Sizes__Time1Assignment_11)
	{ after(grammarAccess.getSizesAccess().getTime1Assignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__12__Impl
	rule__Sizes__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getTime1UnitAssignment_12()); }
	(rule__Sizes__Time1UnitAssignment_12)
	{ after(grammarAccess.getSizesAccess().getTime1UnitAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__13__Impl
	rule__Sizes__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getCalculateKeyword_13()); }
	'calculate'
	{ after(grammarAccess.getSizesAccess().getCalculateKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__14__Impl
	rule__Sizes__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getSizeKeyword_14()); }
	'size'
	{ after(grammarAccess.getSizesAccess().getSizeKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__15__Impl
	rule__Sizes__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getWithKeyword_15()); }
	'with'
	{ after(grammarAccess.getSizesAccess().getWithKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__16__Impl
	rule__Sizes__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getTimeKeyword_16()); }
	'time'
	{ after(grammarAccess.getSizesAccess().getTimeKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__17__Impl
	rule__Sizes__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getEqualsSignKeyword_17()); }
	'='
	{ after(grammarAccess.getSizesAccess().getEqualsSignKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__18__Impl
	rule__Sizes__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getTime2Assignment_18()); }
	(rule__Sizes__Time2Assignment_18)
	{ after(grammarAccess.getSizesAccess().getTime2Assignment_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sizes__Group__19__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizesAccess().getTime2UnitAssignment_19()); }
	(rule__Sizes__Time2UnitAssignment_19)
	{ after(grammarAccess.getSizesAccess().getTime2UnitAssignment_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Complexity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Complexity__Group__0__Impl
	rule__Complexity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexityAccess().getOKeyword_0()); }
	'O'
	{ after(grammarAccess.getComplexityAccess().getOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Complexity__Group__1__Impl
	rule__Complexity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexityAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getComplexityAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Complexity__Group__2__Impl
	rule__Complexity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexityAccess().getAlternatives_2()); }
	(rule__Complexity__Alternatives_2)
	{ after(grammarAccess.getComplexityAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Complexity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Complexity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexityAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getComplexityAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CalculationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCalculationsCalculationParserRuleCall_1_0()); }
		ruleCalculation
		{ after(grammarAccess.getModelAccess().getCalculationsCalculationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__ComplexityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getComplexityComplexityParserRuleCall_3_0()); }
		ruleComplexity
		{ after(grammarAccess.getExecutionTimesAccess().getComplexityComplexityParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Time1Assignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getTime1INTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getExecutionTimesAccess().getTime1INTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Time1UnitAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getTime1UnitTimeUnitsEnumRuleCall_8_0()); }
		ruleTimeUnits
		{ after(grammarAccess.getExecutionTimesAccess().getTime1UnitTimeUnitsEnumRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Size1Assignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getSize1INTTerminalRuleCall_12_0()); }
		RULE_INT
		{ after(grammarAccess.getExecutionTimesAccess().getSize1INTTerminalRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Time2UnitAssignment_16
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getTime2UnitTimeUnitsEnumRuleCall_16_0()); }
		ruleTimeUnits
		{ after(grammarAccess.getExecutionTimesAccess().getTime2UnitTimeUnitsEnumRuleCall_16_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionTimes__Size2Assignment_20
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutionTimesAccess().getSize2INTTerminalRuleCall_20_0()); }
		RULE_INT
		{ after(grammarAccess.getExecutionTimesAccess().getSize2INTTerminalRuleCall_20_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__ComplexityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizesAccess().getComplexityComplexityParserRuleCall_3_0()); }
		ruleComplexity
		{ after(grammarAccess.getSizesAccess().getComplexityComplexityParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Size1Assignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizesAccess().getSize1INTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getSizesAccess().getSize1INTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Time1Assignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizesAccess().getTime1INTTerminalRuleCall_11_0()); }
		RULE_INT
		{ after(grammarAccess.getSizesAccess().getTime1INTTerminalRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Time1UnitAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizesAccess().getTime1UnitTimeUnitsEnumRuleCall_12_0()); }
		ruleTimeUnits
		{ after(grammarAccess.getSizesAccess().getTime1UnitTimeUnitsEnumRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Time2Assignment_18
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizesAccess().getTime2INTTerminalRuleCall_18_0()); }
		RULE_INT
		{ after(grammarAccess.getSizesAccess().getTime2INTTerminalRuleCall_18_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sizes__Time2UnitAssignment_19
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizesAccess().getTime2UnitTimeUnitsEnumRuleCall_19_0()); }
		ruleTimeUnits
		{ after(grammarAccess.getSizesAccess().getTime2UnitTimeUnitsEnumRuleCall_19_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LINEAR : 'n';

RULE_EXPONENTIAL : 'n^' ('1'..'9')+;

RULE_LOGARITHMIC : 'log' 'n';

RULE_LINLOG : 'n' 'log' 'n';

RULE_LINLOGEXP : 'n^' ('1'..'9')+ 'log^' ('1'..'9')+ ' '+ 'n';

RULE_POWER : ('1'..'9')+ '^' 'n';

RULE_FACTORIAL : 'n!';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
